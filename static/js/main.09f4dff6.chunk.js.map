{"version":3,"sources":["components/TodoList/TodoSlice.js","components/TodoForm/index.jsx","components/TodoList/index.jsx","components/LeftCounter/index.jsx","components/Selector/index.jsx","components/ClearCompleted/index.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["TodoSLice","createSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addTodo","state","action","push","id","shortid","generate","title","payload","isComplete","setItem","stringify","deleteTodo","itemIndex","findIndex","item","splice","setComplete","completeAll","filter","length","map","deleteAllCompleteTodo","reducer","actions","TodoForm","props","useState","value","setValue","todos","useSelector","dispatch","useDispatch","allIsComplete","onSubmit","e","preventDefault","trim","className","onClick","style","opacity","type","placeholder","onChange","target","TodoList","todo","LeftCounter","Selector","selectAll","selectActive","selectComplete","ClearCompleted","App","filteredTodos","setfilteredTodos","status","setStatus","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","todoReducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f4dff6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nexport const TodoSLice = createSlice({\r\n  name: \"todos\",\r\n  initialState: JSON.parse(localStorage.getItem(\"data\")) || [],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push({\r\n        id: shortid.generate(),\r\n        title: action.payload,\r\n        isComplete: false,\r\n      });\r\n      localStorage.setItem(\"data\", JSON.stringify(state));\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      const itemIndex = state.findIndex((item) => item.id === action.payload);\r\n\r\n      state.splice(itemIndex, 1);\r\n      localStorage.setItem(\"data\", JSON.stringify(state));\r\n    },\r\n    setComplete: (state, action) => {\r\n      const itemIndex = state.findIndex((item) => item.id === action.payload);\r\n      state[itemIndex].isComplete = !state[itemIndex].isComplete;\r\n      localStorage.setItem(\"data\", JSON.stringify(state));\r\n    },\r\n    completeAll: (state, action) => {\r\n      if (\r\n        state.filter((item) => item.isComplete === true).length === state.length\r\n      ) {\r\n        state.map((item) => (item.isComplete = false));\r\n      } else state.map((item) => (item.isComplete = true));\r\n      localStorage.setItem(\"data\", JSON.stringify(state));\r\n    },\r\n    deleteAllCompleteTodo: (state, action) => {\r\n      state.filter((item) => item.isComplete === false);\r\n      localStorage.setItem(\"data\", JSON.stringify(state));\r\n    },\r\n  },\r\n});\r\n\r\nconst { reducer, actions } = TodoSLice;\r\nexport const {\r\n  addTodo,\r\n  deleteTodo,\r\n  setComplete,\r\n  completeAll,\r\n  deleteAllCompleteTodo,\r\n} = actions;\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTodo, completeAll } from \"../TodoList/TodoSlice\";\r\nimport \"./style.css\";\r\nfunction TodoForm(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const todos = useSelector((state) => state.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!value.trim()) {\r\n      setValue(\"\");\r\n      return;\r\n    }\r\n\r\n    dispatch(addTodo(value));\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const allIsComplete =\r\n    todos.filter((item) => item.isComplete === true).length === todos.length;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <i\r\n        className=\"fas fa-check-double complete-all\"\r\n        onClick={() => dispatch(completeAll())}\r\n        style={{\r\n          opacity: allIsComplete ? \"1\" : \"0.4\",\r\n        }}\r\n      ></i>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What needs to be done?\"\r\n        onChange={handleOnChange}\r\n        value={value}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import \"./style.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, setComplete } from \"./TodoSlice\";\r\n\r\nfunction TodoList(props) {\r\n  const { todos } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"todo\">\r\n      <ul className=\"todo__list\">\r\n        {todos.map((todo) => (\r\n          <li className=\"todo__list-item\" key={todo.id}>\r\n            {todo.isComplete ? (\r\n              <i\r\n                className=\"fas fa-check-square check-btn\"\r\n                onClick={() => dispatch(setComplete(todo.id))}\r\n              ></i>\r\n            ) : (\r\n              <i\r\n                className=\"far fa-check-square check-btn\"\r\n                onClick={() => dispatch(setComplete(todo.id))}\r\n              ></i>\r\n            )}\r\n            <span\r\n              className={todo.isComplete ? \"active todo-title\" : \"todo-title\"}\r\n            >\r\n              {todo.title}\r\n            </span>\r\n            <i\r\n              className=\"fas fa-trash-alt delete-btn\"\r\n              onClick={() => dispatch(deleteTodo(todo.id))}\r\n            ></i>\r\n          </li>\r\n        ))}\r\n        {!todos.length && <h2 className=\"empty-list\">EMPTY !</h2>}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./style.css\";\r\n\r\nfunction LeftCounter(props) {\r\n  const todos = useSelector((state) => state.todos);\r\n  return (\r\n    <div>\r\n      <p className=\"counter\">\r\n        {todos.filter((item) => item.isComplete === false).length} items left\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftCounter;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Selector(props) {\r\n  const { selectAll, selectActive, selectComplete } = props;\r\n  return (\r\n    <div className=\"selector\">\r\n      <button className=\"btn\" onClick={() => selectAll()}>\r\n        All\r\n      </button>\r\n      <button className=\"btn\" onClick={() => selectActive()}>\r\n        Active\r\n      </button>\r\n      <button className=\"btn\" onClick={() => selectComplete()}>\r\n        Completed\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selector;\r\n","import { useDispatch } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport { deleteAllCompleteTodo } from \"../TodoList/TodoSlice\";\r\n\r\nfunction ClearCompleted(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"clear-completed\">\r\n      <button className=\"btn\" onClick={() => dispatch(deleteAllCompleteTodo())}>\r\n        Clear completed\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClearCompleted;\r\n","import \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport LeftCounter from \"./components/LeftCounter\";\nimport Selector from \"./components/Selector\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport ClearCompleted from \"./components/ClearCompleted\";\n\nfunction App() {\n  const todos = useSelector((state) => state.todos);\n  const [filteredTodos, setfilteredTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setfilteredTodos(todos.filter((item) => item.isComplete === true));\n        break;\n      case \"active\": // uncompleted\n        setfilteredTodos(todos.filter((item) => item.isComplete === false));\n        break;\n      default:\n        setfilteredTodos(todos);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"app-name\">todos</h2>\n      <TodoForm />\n      <TodoList todos={filteredTodos} />\n      <div className=\"select\">\n        <LeftCounter />\n        <Selector\n          selectAll={() => setStatus(\"all\")}\n          selectActive={() => setStatus(\"active\")}\n          selectComplete={() => setStatus(\"completed\")}\n        />\n        {todos.filter((item) => item.isComplete).length !== 0 && (\n          <ClearCompleted />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from \"../components/TodoList/TodoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: { todos: todoReducer },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}